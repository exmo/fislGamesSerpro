# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ROTAS DO SERVIDOR, DISPONIVEIS NA APLICACAO WEB, ACESSIVEIS APEANS PARA USUARIO ADMIN
GET     /                           controllers.Application.index
GET     /qrcode/form                controllers.QRCodes.formQRCode
GET     /qrcode/render/             controllers.QRCodes.renderQRCode(size:Int ?= 480)
POST    /qrcode/render              controllers.QRCodes.renderQRCodePost

POST    /qrcode/gerar               controllers.QRCodes.gerarQRCode
POST    /qrcode/:id/delete          controllers.QRCodes.deleteQRCode(id: Long)
GET     /ranking                    controllers.Desafios.ranking
GET     /respostas/:email           controllers.Desafios.respostas(email: String)
GET     /todasrespostas/:id         controllers.Desafios.todasRespostas(id: Long)
GET     /respostacorreta/:id/:email controllers.Desafios.considerarRespostaCorreta(id: Long, email: String)

# ROTAS DISPONIVEIS PARA ACESSO REST VIA APP PHONEGAP, RETORNANDO JSONP
GET     /usuario/criar/:email/:nome/:telefone   controllers.Users.criarUsuario(email: String, nome: String, telefone: String, callback: String)
GET     /usuario/consultar/:email               controllers.Users.consultarUsuario(email: String, callback: String ?= "N/A")
GET     /desafio/:id/:email/:resposta           controllers.Desafios.responder(id: Long, email: String, resposta: String, callback: String)
GET     /respostasCompletas/:email              controllers.Desafios.respostasAsJson(email: String, callback: String)

GET     /qrcode/json/:id                        controllers.QRCodes.renderQRCodeJSON(id: Long, callback: String)
GET     /ranking/json/:email                    controllers.Desafios.rankingJson(email: String, callback: String)

POST    /palestra/:id/excluir       controllers.Palestras.excluir(id: Long)
GET     /palestra/listar            controllers.Palestras.listar
POST    /palestra/cadastrar         controllers.Palestras.cadastrar()

GET     /palestra/:palestraid/checkin/:email    controllers.Palestras.registrarParticipacao(palestraid: Long, email: String, inOut: String ?= "I")
GET     /palestra/:palestraid/checkout/:email   controllers.Palestras.registrarParticipacao(palestraid: Long, email: String, inOut: String ?= "O")
GET     /palestras                              controllers.Palestras.listarAsJson
#GET    /palestra/:palestraid


# Authentication
GET     /login                      controllers.Login.login
POST    /auth                       controllers.Login.authenticate
GET     /logout                     controllers.Login.logout

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
